# Nightly jellybean building script
#
# for benjamingwynn's jellybean marvel builds.

#- jellyhelp :)

if [ "$1" = -g ] || [ "$2" = -g ] || [ "$3" = -g ] || [ "$4" = -g ] || [ "$5" = -g ] || [ "$6" = -g ]
  then
     clear
     echo "Updating from github..."
     echo ""
     echo "Cleaning up any update mess"
     rm -rf cm_marvel_jellybean_port
     echo "Updating script..."
     git clone git://github.com/benjamingwynn/cm_marvel_jellybean_port.git
     cp ~/cm_marvel_jellybean_port/jelly ~/jelly
     chmod a+x ~/jelly
     clear
     echo "The latest version of the script will be used on the next launch."

fi

if [ "$1" = "-?" ]
  then
     clear
     echo "jelly | A simple CM compiling script"
     echo "Created by Benjamin Gwynn"
     echo " "
     echo "Usage: ./jelly [device] [type] [flags]"
     echo " "
     echo "Flags:"
     echo ""
     echo "-u    Upload to goo.im      "
     echo "-d    Make dirty            "
     echo "-g    Update from github    "
     echo "-l    Log the compie        "
     echo "-n    No compile            "
     echo ""
     echo "Types:"
     echo ""
     echo "user"
     echo "userdebug"
     echo "eng"
     echo ""
     echo ""
     exit
fi

if [ "$1" = "" ]
  then
     echo "FATAL: No device flag given, stopping."
     echo " "
     echo "For usage, type -?"
     exit
fi

if [ "$2" = "" ]
  then
     echo "FATAL: No type flag given, stopping."
     echo " "
     echo "For usage, type -?"
     exit
fi

#- ...otherwise, carry on.
echo "Jellybean Nightly build script"
echo " "
echo "Working..."
cd ~/cm-jb
source build/envsetup.sh
export USE_CCACHE=1
echo "Compile for the $1..."
lunch cm_$1-$2
echo "Syncing..."
repo sync

# Patch up the working tree

#echo "Applying patches to build..."
#cd ~/cm-jb/frameworks/av
#echo "Revering newer framework_av patches."
#git reset --hard d34a90fe138fae3dce2b328ea6fe2308a5457eeb
#cd ~/cm-jb/hardware/libhardware_legacy
#echo "Revert newer libhardware_legacy patches."
#git reset --hard 3d7eb0587ea611f4437ef4e9c323988788cd2c23

cd ~/cm-jb
if [ "$3" = -n ] || [ "$4" = -n ] || [ "$5" = -n ] || [ "$6" = -n ]; then
echo "Not compiling"
else
  if [ "$3" = -d ] || [ "$4" = -d ] || [ "$5" = -d ] || [ "$6" = -d ]
    then
        echo "Making dirty..."
    else
        echo "Cleaning..."
        make clean
        make clobber
  fi
echo "Compiling..."
if [ "$3" = -l ] || [ "$4" = -l ] || [ "$5" = -l ] || [ "$6" = -l ]
  then
     echo "Logging compile to file"
     logfile=~/buildlog$RANDOM
     make -j8 bacon > $logfile
     echo "Info: Saved at ~/$logfile"
  else
     echo "Not logging compile"
     make -j8 bacon
fi
fi
echo "Setting dates..."
date1="$(date +%Y%m%d)"
date2="$(date +%d-%m-%Y)"
date3="$(date +%m)"
if [ "$date3" = "01" ]; then date4="January"; fi
if [ "$date3" = "02" ]; then date4="February"; fi
if [ "$date3" = "03" ]; then date4="March"; fi
if [ "$date3" = "04" ]; then date4="April"; fi
if [ "$date3" = "05" ]; then date4="May"; fi
if [ "$date3" = "06" ]; then date4="June"; fi
if [ "$date3" = "07" ]; then date4="July"; fi
if [ "$date3" = "08" ]; then date4="August"; fi
if [ "$date3" = "09" ]; then date4="September"; fi
if [ "$date3" = "10" ]; then date4="October"; fi
if [ "$date3" = "11" ]; then date4="November"; fi
if [ "$date3" = "12" ]; then date4="December"; fi
date5="$(date +%Y)"
if [ "$3" = -u ] || [ "$4" = -u ] || [ "$5" = -u ] || [ "$6" = -u ]
  then
    if [ -f $date2 ]
      then
        echo ". "
        echo ".. "
        echo "... "
        echo ".... "
        echo " "
        echo "Notice: Refusing to upload. CM10 has already been uploaded today."
      else
        touch $date2
        echo "Uploading to Goo.im..."
        scp -P 2222 out/target/product/$1/"cm-10-"$date1"-EXPERIMENTAL-"$1"-CM-10-NIGHTLY-"$date2".zip" benjamingwynn@upload.goo.im:public_html/$1/CyanogenMod10/$date5/$date3"_"$date4/"CM10-"$date3".zip"
        echo ". "
        echo ".. "
        echo "... "
        echo ".... "
        echo " "
        echo "Notice: Uploaded to http://goo.im/devs/benjamingwynn/$1/CyanogenMod10"
    fi
else
    echo ". "
    echo ".. "
    echo "... "
    echo ".... "
fi
echo " "
