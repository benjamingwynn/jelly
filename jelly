# Nightly jellybean building script
#
# for benjamingwynn's jellybean marvel builds.

#- jellyhelp :)

if [ "$1" = -g ] || [ "$2" = -g ] || [ "$3" = -g ] || [ "$4" = -g ] || [ "$5" = -g ] || [ "$6" = -g ]
  then
     clear
     echo "Updating from github..."
     echo ""
     echo "Cleaning up any update mess"
     rm -rf cm_marvel_jellybean_port
     echo "Updating script..."
     git clone git://github.com/benjamingwynn/cm_marvel_jellybean_port.git
     cp ~/cm_marvel_jellybean_port/jelly ~/jelly
     clear
     echo "The latest version of the script will be used on the next launch."
     echo ""
  fi

if [ "$1" = "-?" ]
  then
     clear
     echo "jelly | A simple CM compiling script"
     echo "Created by Benjamin Gwynn"
     echo " "
     echo "Usage: ./jelly [device] [type] [flags]"
     echo " "
     echo "Flags:"
     echo ""
     echo "-u    Upload to goo.im"
     echo "-d    Make dirty"
     echo "-g    Update from github"
     echo ""
     echo "Types:"
     echo ""
     echo "user"
     echo "userdebug"
     echo "eng"
     echo ""
     echo ""
     exit
fi

#- Make sure we are using the script correctly, if we aren't then throw errors...

if [ "$1" = "-u" ]
  then
     echo "FATAL: -u flag given before device flag."
     echo " "
     echo "For usage, type -?"
     exit
fi

if [ "$2" = "-u" ]
  then
     echo "FATAL: -u flag given before type flag."
     echo " "
     echo "For usage, type -?"
     exit
fi

if [ "$1" = "" ]
  then
     echo "FATAL: No device flag given, stopping."
     echo " "
     echo "For usage, type -?"
     exit
fi

if [ "$2" = "" ]
  then
     echo "FATAL: No type flag given, stopping."
     echo " "
     echo "For usage, type -?"
     exit
fi

#- ...otherwise, carry on.
echo "Jellybean Nightly build script"
echo " "
echo "Working..."
cd ~/cm-jb
source build/envsetup.sh; 
export USE_CCACHE=1
echo "Compile for the $1..."
lunch cm_$1-$2
echo "Syncing..."
repo sync
echo "Applying patches to build"
cd ~/cm-jb/hardware/qcom/display
git fetch http://review.cyanogenmod.com/CyanogenMod/android_hardware_qcom_display refs/changes/39/22039/3 && git checkout FETCH_HEAD
git fetch http://review.cyanogenmod.com/CyanogenMod/android_hardware_qcom_display refs/changes/67/22467/1 && git checkout FETCH_HEAD
cd ~/cm-jb/hardware/msm7k
git fetch http://review.cyanogenmod.com/CyanogenMod/android_hardware_msm7k refs/changes/58/15058/3 && git checkout FETCH_HEAD
cd ~/cm-jb/bionic
git fetch http://review.cyanogenmod.com/CyanogenMod/android_bionic refs/changes/31/14631/1 && git checkout FETCH_HEAD
cd ~/cm-jb/hardware/libhardware_legacy
git reset --hard HEAD
git pull
git revert 12c07ca06b41e1346874574747c401f6627ebe38 --no-edit -n
git revert 6f65b558e970cd1ad8b228e866a824a8ef7e9560 --no-edit -n
cd ~/cm-jb
if [ "$3" = -d ] || [ "$4" = -d ]
  then
     echo "Making dirty..."
  else
     echo "Cleaning..."
     make clean
     make clobber
fi
echo "Compiling..."
make -j8 bacon
echo "Setting dates..."
a="$(date +%Y%m%d)"
b="$(date +%d-%m-%Y)"
c="$(date +%m)"
if [ "$c" = "01" ]; then d="January"; fi
if [ "$c" = "02" ]; then d="February"; fi
if [ "$c" = "03" ]; then d="March"; fi
if [ "$c" = "04" ]; then d="April"; fi
if [ "$c" = "05" ]; then d="May"; fi
if [ "$c" = "06" ]; then d="June"; fi
if [ "$c" = "07" ]; then d="July"; fi
if [ "$c" = "08" ]; then d="August"; fi
if [ "$c" = "09" ]; then d="September"; fi
if [ "$c" = "10" ]; then d="October"; fi
if [ "$c" = "11" ]; then d="November"; fi
if [ "$c" = "12" ]; then d="December"; fi
e="$(date +%Y)"
if [ "$3" = -u ] || [ "$4" = -u ]
  then
    if [ -f $b ]
      then
        echo "Jellybean has already been built today, not uploading"
        clear
        echo "Done! Build wasn't uploaded."
      else
        touch $b
        echo "Uploading to goo.im..."
        scp -P 2222 out/target/product/$1/"cm-10-"$a"-EXPERIMENTAL-"$1"-CM-10-NIGHTLY-"$b".zip" benjamingwynn@upload.goo.im:public_html/$1/CyanogenMod10/$e/$c"_"$d/"CM10-"$c".zip"
        clear
        echo "Done! Build is at http://goo.im/devs/benjamingwynn/CyanogenMod10"
    fi
else
    echo "-u flag not given, will not upload."
    clear
    echo "Done! Build wasn't uploaded."
fi
echo " "
